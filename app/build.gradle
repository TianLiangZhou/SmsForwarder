apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'

def keyProps = new Properties()
def keyPropsFile = rootProject.file('keystore/keystore.properties')
if (keyPropsFile.exists()) {
    keyProps.load(new FileInputStream(keyPropsFile))
}

// 读取version.properties
def versionProps = new Properties()
def versionPropsFile = rootProject.file('version.properties')
if (versionPropsFile.exists()) {
    versionProps.load(new FileInputStream(versionPropsFile))
}

android {
    buildToolsVersion '30.0.3'
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.idormy.sms.forwarder"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode versionProps?.versionCode?.toInteger()
        versionName versionProps?.versionName
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    signingConfigs {
        release {
            keyAlias keyProps.keyAlias
            keyPassword keyProps.keyPassword
            storeFile keyProps.storeFile ? file(keyProps.storeFile) : null
            storePassword keyProps.storePassword
        }
        debug {
            keyAlias keyProps.keyAlias
            keyPassword keyProps.keyPassword
            storeFile keyProps.storeFile ? file(keyProps.storeFile) : null
            storePassword keyProps.storePassword
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility 11
        targetCompatibility 11
    }

    lintOptions {
        checkReleaseBuilds false
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            //def date = new Date().format("yyyyMMdd" , TimeZone.getTimeZone("Asia/Shanghai"))
            def date = new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08"))
            if (variant.buildType.name == 'debug') {
                outputFileName = "SmsForwarder_debug_${date}_${versionName}.apk"
            }
            if (variant.buildType.name == 'release') {
                outputFileName = "SmsForwarder_release_${date}_${versionName}.apk"
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}


task upgradeVersion {
    group 'help'
    description '构建新版本'
    doLast {
        println("---自动升级版本号---\n")
        String oldVersionCode = versionProps.versionCode
        String oldVersionName = versionProps.versionName
        if (oldVersionCode == null || oldVersionName == null ||
                oldVersionCode.isEmpty() || oldVersionName.isEmpty()) {
            println("error:版本号不能为空")
            return
        }
        versionProps.versionCode = String.valueOf(versionProps?.versionCode?.toInteger() + 1)
        String str = versionProps.versionName.toString()
        versionProps.versionName = str.substring(0, str.lastIndexOf('.') + 1) +
                (str.substring(str.lastIndexOf('.') + 1).toInteger() + 1)
        String tip =
                "版本号从$oldVersionName($oldVersionCode)升级到${versionProps.versionName}(${versionProps.versionCode})"
        println(tip)

        def writer = new FileWriter(versionPropsFile)
        versionProps.store(writer, null)
        writer.flush()
        writer.close()
        def tag = "v${versionProps.versionName}"
        cmdExecute("git pull")
        cmdExecute("git add version.properties")
        cmdExecute("git commit -m \"版本号升级为：$tag\"")
        cmdExecute("git push origin")
        cmdExecute("git tag $tag")
        cmdExecute("git push origin $tag")
    }
}

void cmdExecute(String cmd) {
    println "\n执行$cmd"
    println cmd.execute().text
}


dependencies {
    implementation fileTree (dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.google.android.material:material:1.5.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.firebase:firebase-crashlytics-buildtools:2.8.1'


    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.appcompat:appcompat-resources:1.4.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
    implementation 'androidx.preference:preference-ktx:1.2.0'

    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    implementation 'androidx.room:room-ktx:2.4.1'
    implementation 'androidx.room:room-paging:2.4.1'

    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha03'
    kapt 'androidx.room:room-compiler:2.4.1'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0"

    implementation "androidx.fragment:fragment-ktx:1.4.1"
    implementation "androidx.activity:activity-ktx:1.4.0"


    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"


    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation "ch.qos.logback:logback-classic:1.2.10"


    api("androidx.work:work-multiprocess:2.7.1")
    api("androidx.work:work-runtime-ktx:2.7.1")


    implementation("androidx.paging:paging-runtime-ktx:$paging_version")



    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.room:room-testing:2.4.1'

    //友盟统计SDK
    implementation 'com.umeng.umsdk:common:9.4.4'// 必选
    implementation 'com.umeng.umsdk:asms:1.4.3'// 必选
    //implementation 'com.umeng.umsdk:apm:1.4.2' // 错误分析升级为独立SDK，看crash数据请一定集成，可选

    implementation 'com.github.mailhu:emailkit:4.2.2'

    implementation 'com.github.permissions-dispatcher:ktx:1.1.3'
}
